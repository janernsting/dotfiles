" Use Vim settings, rather then Vi settings (much better!).
" This must be first, because it changes other options as a side effect.
set nocompatible

" pathogen manages plugins
runtime bundle/vim-pathogen/autoload/pathogen.vim
call pathogen#infect()
call pathogen#helptags()

" to ensure compatibility with fish
set shell=/bin/sh

" place backup files in folders dedicated to temporary files
set backupdir=~/.vim/tmp,~/.tmp,~/tmp,/var/tmp,/tmp
set directory=~/.vim/tmp,~/.tmp,~/tmp,/var/tmp,/tmp

" syntax highlighting
syntax enable

" prevent repeated simple movements to break habits
let g:hardtime_default_on = 1
let g:hardtime_ignore_buffer_patterns = [ "NERD.*" ]

" colorscheme
set background=light
let g:solarized_termcolors=256
colorscheme solarized

" tabstop settings
set tabstop=2
set softtabstop=2
set shiftwidth=2
set expandtab
set shiftround

set autoindent
set backspace=indent,eol,start
set complete-=i
set smarttab

set nrformats-=octal

" Search is only case-sensitive for upper-case characters
set ignorecase
set smartcase
set hlsearch
set incsearch
" Use <C-L> to clear the highlighting of :set hlsearch.
if maparg('<C-L>', 'n') ==# ''
  nnoremap <silent> <C-L> :nohlsearch<CR><C-L>
endif

" Load matchit.vim, but only if the user hasn't installed a newer version.
if !exists('g:loaded_matchit') && findfile('plugin/matchit.vim', &rtp) ==# ''
  runtime! macros/matchit.vim
endif

set mouse=nc " allow mouse in normal and command-line mode only (see help mouse)
" visual mode mouse support triggered random E315

" For vim-powerline theme
set laststatus=2
let g:airline_powerline_fonts = 1

" automatically reload files
set autoread

" Remember more commands and search history
set history=1000

" Make tab completion for files/buffers act like bash
set wildmenu
set wildignorecase
set wildignore=*.pyc,*.class

" Turn on relative line numbers
set relativenumber
set cursorline

set nojoinspaces

" Open split panes below or to the right (see
" https://github.com/thoughtbot/dotfiles/)
set splitbelow
set splitright

" remap escape (eliminates reaching for escape key)
inoremap kj <ESC>

" Leader key on space bar
let mapleader = ' '

" show commands, but ignore mode as it shown by airline
set showcmd
set noshowmode

set scrolloff=3
set sidescrolloff=5

set listchars=tab:▸\ ,extends:❯,precedes:❮,nbsp:.,trail:·,eol:¬
" allow to save files with root permissions
cmap w!! w !sudo tee >/dev/null %

" flake8 integration for python
autocmd FileType python map <buffer> <leader>f :call Flake8()<CR>
autocmd BufNewFile,BufRead *.py compiler nose

" Start interactive EasyAlign in visual mode (e.g. vipga)
xmap ga <Plug>(EasyAlign)

" Start interactive EasyAlign for a motion/text object (e.g. gaip)
nmap ga <Plug>(EasyAlign)

" use silver searcher/ag as ack replacement
let g:ackprg = 'ag --nogroup --nocolor --column'

" NERDTree toggling
nmap <silent> <leader>n :NERDTreeToggle<CR>

" Gundo toggling
nmap <silent> <leader>g :GundoToggle<CR>

" ZoomWin toggling
nnoremap <silent> <leader><leader> :ZoomWin<CR>

" toggle paste mode
map <silent> <leader>pp :setlocal paste!<cr>

" quick save
noremap <silent> <leader>w :update<CR>

" Clean trailing whitespace
nnoremap <leader>dw mz:%s/\s\+$//<cr>:let @/=''<cr>`z

" Gitv should automatically decide where to place preview
let g:Gitv_OpenHorizontal = "auto"

" Tagbar configuration
" Shorter commands to toggle Taglist display
nnoremap TT :TagbarToggle<CR>

let g:tagbar_type_asciidoc = {
    \ 'ctagstype' : 'asciidoc',
    \ 'kinds' : [
        \ 'h:table of contents',
        \ 'a:anchors:1',
        \ 't:titles:1',
        \ 'n:includes:1',
        \ 'i:images:1',
        \ 'I:inline images:1'
    \ ],
    \ 'sort' : 0
\ }
" disable tagbar in airline status
let g:airline#extensions#tagbar#enabled = 0

" LaTeX suite
" REQUIRED. This makes vim invoke Latex-Suite when you open a tex file.
filetype plugin indent on

imap <buffer> <silent> <C-E> <Plug>Tex_Completion

" IMPORTANT: grep will sometimes skip displaying the file name if you
" search in a single file. This will confuse Latex-Suite. Set your grep
" program to always generate a file-name.
set grepprg=grep\ -nH\ $*

" OPTIONAL: Starting with Vim 7, the filetype of empty .tex files defaults to
" 'plaintex' instead of 'tex', which results in vim-latex not being loaded.
" The following changes the default filetype back to 'tex':
let g:tex_flavor='latex'

" use bibtex8 to support biblatex
let g:Tex_BibtexFlavor = "bibtex8"

" disable section maps
let g:Tex_SectionMaps = 0

" Taglist / LaTeX
let tlist_bib_settings   = 'bib;a:BibTeX-Authors;e:BibTeX-Entries;t:BibTeX-Titles;s:BibTeX-Strings'
let tlist_make_settings  = 'make;m:makros;t:targets'
let tlist_tex_settings   = 'latex;s:Contents;g:Graphics;i:Listings;l:\label;r:\ref;p:\pageref;b:\bibitem'

let g:Tex_IgnoredWarnings =
  \"Underfull\n".
  \"Overfull\n".
  \"specifier changed to\n".
  \"You have requested\n".
  \"Missing number, treated as zero.\n".
  \"There were undefined references\n".
  \"Citation %.%# undefined\n".
  \"No \\\\author given."
let g:Tex_IgnoreLevel = 8
let g:Tex_GotoError = 0

" Syntastic settings
let g:syntastic_error_symbol='✗'
let g:syntastic_warning_symbol='⚠'

" Make sure Vim returns to the same line when reopening a file
augroup line_return
  au!
  au BufReadPost *\(.git/COMMIT_EDITMSG\)\@<!
    \ if line("'\"") > 0 && line("'\"") <= line("$") |
    \   execute 'normal! g`"zvzz' |
    \ endif
augroup END

" trim empty lines at the of the current file
function! TrimEndLines()
  let save_cursor = getpos(".")
  :silent! %s#\($\n\s*\)\+\%$##
  call setpos('.', save_cursor)
endfunction

" always trim empty lines from mails
au FileType mail au BufWritePre <buffer> call TrimEndLines()

autocmd BufRead,BufNewFile *.md set filetype=markdown

" Check English and German spelling
set spelllang=en,de
" Spell-check Git messages
autocmd FileType gitcommit setlocal spell

" quick editing of .vimrc (from sanitz)
nnoremap <silent> <leader>s :source ~/.vimrc<cr>
